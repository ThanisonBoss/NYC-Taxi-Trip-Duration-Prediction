version: '3'

services:

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.4.1
    container_name: mlflow
    ports:
      - "50000:5000"
    volumes:
      - ./mlflow:/mlflow
    networks:
      - front-tier
      - back-tier
    restart: always
    command: mlflow server --backend-store-uri sqlite:///mlflow/mlflow.db --host 0.0.0.0 --port 5000 --artifacts-destination /mlflow/artifacts
  
  fast-api-app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: fast-api-app
    ports:
      - "8000:8000"
    networks:
      - front-tier
      - back-tier
    restart: always

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitor/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - front-tier
      - back-tier
    restart: always

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    ports:
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run/docker.sock:/var/run/docker.sock:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - front-tier
      - back-tier
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports: 
      - 3000:3000 
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitor/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - front-tier
      - back-tier
    restart: always
  
networks:
  front-tier:
  back-tier:
volumes:
    prometheus_data:
    grafana_data: